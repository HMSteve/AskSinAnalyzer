string  svDevList = "AskSinAnalyzerDevList";

!Systemvariable anlegen, falls sie nicht bereits existiert
object  svObj     = dom.GetObject(svDevList);
!dom.DeleteObject(svObj);
!dom.RTUpdate(false);

if (!svObj){   
  object svObjects = dom.GetObject(ID_SYSTEM_VARIABLES);

  svObj = dom.CreateObject(OT_VARDP);

  svObjects.Add(svObj.ID());

  svObj.Name(svDevList);   
  svObj.ValueType(ivtString);
  svObj.ValueSubType(istChar8859);
   
  svObj.DPInfo("used by AskSinAnalyzer");
  svObj.ValueUnit("");
  svObj.State("");
  svObj.Internal(false);
  svObj.Visible(false);

  dom.RTUpdate(false);
  WriteLine("Variable "#svDevList#" angelegt.\n");
} else {
  WriteLine("Variable "#svDevList#" existiert.\n");
}

!alle Ger√§teadressen, Seriennummer und Namen erfassen
string sDevId;
string data;
string metaData;
string result = "[{\"address\":15728641,\"serial\":\"HMIPBCAST\",\"HmIP Broadcast\"},{\"address\":0,\"serial\":\"HMRFBCAST\",\"HmRF Broadcast\"},";

foreach(sDevId, root.Devices().EnumUsedIDs())
{
  var dev= dom.GetObject(sDevId);
  if ( true == dev.ReadyConfig() )
  {
    metaData = dev.MetaData("DEVDESC");
    foreach (data, metaData.Split(",")) {
      if (data.Substr(0,10) == "RF_ADDRESS") {
        data = data.Replace("RF_ADDRESS:","");
        if (data != "0") {
          result = result # "{\"address\":" #data#",\"serial\":\""#dev.Address()#"\",\"name\":\""#dev.Name()#"\"},";
        }
      }
    }
  }
}
result = result # "]";
result = result.Replace("},]","}]");


dom.GetObject(ID_SYSTEM_VARIABLES).Get(svDevList).State(result);
Write(result);

!Abfrage im Browser mit http://ccu2:8181/ret.exe?ret=dom.GetObject("AskSinAnalyzerDevList").Value()

